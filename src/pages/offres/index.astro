---
import Base from "../../layouts/Base.astro";
import Card from "../../components/Card.astro";
import type { ACTION_ERROR_CODES, ACTION_QUERY_PARAMS } from "astro:actions";
import { getOffres } from "../../../backend.mjs";
const offres = await getOffres();
console.log(offres);
let message = "";
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix"));
    const maxPrix = parseInt(data.get("maxPrix"));

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        Offres = await filterByPrix(minPrix, maxPrix);
        if (Offres.length === 0) {
            message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
        } else {
            message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`;
        }
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
    }
} else {
    Offres = await getOffres();
}
---

<Base titre="Accueil">
    <h1>Offres</h1>
    <!-- ou "Offres" pour la page des offres -->
    <p>bienvenue sur ma page pour mes offres</p>
    <p>Voici mes offres de Maison :</p>
    <a href="/offres/add">Ajouter une offre</a>
    <div x-data="{ open: false }">
        <button x-on:click="open = ! open">Liste </button>

        <div :class="open ? 'list' : 'hidden'">Card</div>
    </div>
    <div class="columns-7" x-data="{ showFavorites: false }">
        <button @click="showFavorites=!showFavorites">
            <span x-show="showFavorites">Afficher tout</span>
            <span x-show="!showFavorites">Afficher les favori</span>
        </button>
        <form action="/offres" method="POST">
            <input type="number" name="minPrix" placeholder="Prix minimum" />
            <input type="number" name="maxPrix" placeholder="Prix maximum" />
            <input type="submit" value="Filtrer par prix" />
        </form>
        <div x-show="!showFavorites">
            {offres.map((offre) => <Card {...offre} />)}
        </div>
        <div x-show="showFavorites">
            {offres.map((offre) => offre.favori && <Card {...offre} />)}
        </div>
    </div>
</Base>
